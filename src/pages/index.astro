---
import { ClientRouter } from "astro:transitions";
import { Image } from "astro:assets";
import logo from "../img/librarylogo.png";

import directus from "../lib/directus";
import { readItems } from "@directus/sdk";

const baseUrl = import.meta.env.PUBLIC_DIRECTUS_URL;

const books = await directus.request(
  readItems("books", {
    fields: ["title", "slug", "cover", "status"],
  })
);
---

<html lang="de">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="/favicon/apple-touch-icon.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/favicon/favicon-32x32.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href="/favicon/favicon-16x16.png"
    />
    <link rel="manifest" href="/favicon/site.webmanifest" />
    <meta name="theme-color" content="#f5f3ec" />
    <title>My Library</title>
    <ClientRouter />
  </head>
  <body>
    <div class="header">
      <Image
        src={logo}
        width={100}
        height={100}
        alt={"MyLibraryLogo"}
        loading={"eager"}
      />
      <h1 class="sr-only">My Library</h1>
    </div>

    <div class="filter-section">
      <input type="text" id="searchInput" placeholder="Buchtitel suchen..." />
      <select id="statusFilter">
        <option value="">Alle Status</option>
        <option value="#8B3A3A">Nicht gelesen</option>
        <option value="#D8B65A">Angefangen</option>
        <option value="#6C8B59">Gelesen</option>
      </select>
    </div>

    <ul id="booksList">
      {
        books?.map((book) => (
          <li data-title={book.title.toLowerCase()} data-status={book.status}>
            <a href={`/buch/${book.slug}`}>
              <h2>{book.title}</h2>

              <div
                style={`background-color: ${book.status}; height: 1.5rem; width: 1.5rem; border-radius: 50%;`}
              />

              <img
                src={`${baseUrl}/assets/${book.cover}`}
                width="100%"
                alt={book.title}
                class="cover"
              />
            </a>
          </li>
        ))
      }
    </ul>
  </body>
</html>

<style>
  * {
    margin: 0 auto;
    padding: 0;
    box-sizing: border-box;
  }

  html::-webkit-scrollbar {
    display: none;
  }

  @font-face {
    font-family: OldFont;
    src: url(/font/IMFellDWPicaSC-Regular.ttf);
  }

  body {
    background-image: url(/img/paper-background.png);
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    background-attachment: fixed;
    font-family: "OldFont", serif;
    color: #1a1d1a;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  ul {
    display: flex;
    max-width: 80%;
    flex-wrap: wrap;
    gap: 2rem;
    padding-bottom: 4rem;
  }

  li {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    flex: 1 1 200px;
  }

  a {
    max-width: 200px;
    text-decoration: none;
    color: #1a1d1a;
    text-transform: uppercase;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  h2 {
    max-width: 200px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-size: 1.5rem;
  }

  .header {
    margin-bottom: 1rem;
  }

  .sr-only {
    font-size: 0;
  }

  .cover {
    width: 100%;
    border-radius: 6px;
    transition: all 0.5s ease;
    box-shadow:
      rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,
      rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;
  }

  .cover:hover {
    scale: 1.05;
  }

  .filter-section {
    display: flex;
    gap: 1rem;
    margin-bottom: 2rem;
  }

  input,
  select {
    font-size: 1rem;
    background-color: #f5f3ec;
    border-radius: 3px;
    border: 1px solid #1a1d1a;
    font-family: "OldFont", serif;
    text-transform: uppercase;
  }

  input::placeholder {
    font-size: 0.8rem;
  }

  @media screen and (max-width: 550px) {
    ul {
      max-width: 100%;
    }

    h2,
    a {
      max-width: 350px;
    }

    .cover {
      width: 60%;
    }
  }

  @media screen and (max-width: 375px) {
    .filter-section {
      flex-direction: column;
    }

    .cover {
      width: 50%;
    }

    h2 {
      font-size: 1.2rem;
    }
  }
</style>

<script type="module">
  function setupBookFilters() {
    const list = document.getElementById("booksList");
    const items = list?.querySelectorAll("li") ?? [];

    const searchInput = document.getElementById("searchInput");
    const statusFilter = document.getElementById("statusFilter");

    if (!searchInput || !statusFilter || !list) return;

    function applyFilters() {
      const query = searchInput.value.toLowerCase();
      const status = statusFilter.value;

      items.forEach((li) => {
        const title = li.getAttribute("data-title") || "";
        const itemStatus = li.getAttribute("data-status") || "";

        const matchesTitle = title.includes(query);
        const matchesStatus = status ? itemStatus === status : true;

        if (li instanceof HTMLElement) {
          li.style.display = matchesTitle && matchesStatus ? "" : "none";
        }
      });
    }

    searchInput.addEventListener("input", applyFilters);
    statusFilter.addEventListener("change", applyFilters);
  }

  // Initial Setup
  document.addEventListener("DOMContentLoaded", () => {
    setupBookFilters();
  });

  // Re-run on View Transitions
  document.addEventListener("astro:after-swap", () => {
    setupBookFilters();
  });
</script>
